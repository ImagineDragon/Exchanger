@model Exchanger.Models.EditFileModel

@{
    Layout = null;
    ViewBag.Title = "Edit File";
}

<br/>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "col-md-4 control-label", style = "padding-top: 0;" })
            <div class="col-md-8">
                @if (Model.Size > 1024)
                {
                    if (Model.Size > (1024*1024))
                    {
                        @Html.Encode(Model.Size/1024/1024)
                        <span> MB</span>
                    }
                    else
                    {
                        @Html.Encode(Model.Size/1024)
                        <span> KB</span>
                    }
                }
                else
                {

                    @Html.Encode(Model.Size)
                    <span>B</span>
                }
                @*@Html.Raw(Model.Size)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "col-md-4 control-label", style = "padding-top: 0;" })
            <div class="col-md-8">
                @Html.Encode(Model.CreationDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastEditDate, htmlAttributes: new { @class = "col-md-4 control-label", style = "padding-top: 0;" })
            <div class="col-md-8">
                @Html.Encode(Model.LastEditDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "col-md-4 control-label", style = "padding-top: 0;" })
            <div class="col-md-8">
                @Html.Encode(Model.CreatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Access, htmlAttributes: new { @class = "col-md-4 control-label", style = "padding-top: 0;" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Access, new SelectList(Model.Access, "Access1"), new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileType, htmlAttributes: new {@class = "col-md-4 control-label", style = "padding-top: 0;"})
            <div class="col-md-8">
                @Html.Encode(Model.FileType)
            </div>
        </div>

        <div class="text-center">
            <div class="form-group">
                <div>
                    <input type="submit" value="Save" class="btn btn-default" /> |
                    @Html.ActionLink("Cancel", "UserFiles")
                </div>
            </div>
        </div>
    </div>
}